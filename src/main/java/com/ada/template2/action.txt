package #{action_p};



import javax.servlet.http.HttpServletRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import #{entity_p}.#{Entity};
import #{page_p}.#{Entity}Page;
import #{manager_p}.#{Entity}Service;
@Controller
public class #{Entity}Action {
	private static final Logger log = LoggerFactory.getLogger(#{Entity}Action.class);

	@RequestMapping("/#{config_entity}/view_list")
	public String list(@RequestParam(value = "curpage", required = true, defaultValue = "1") int curpage,
			@RequestParam(value = "pagesize", required = true, defaultValue = "20") int pagesize,
			HttpServletRequest request, ModelMap model) {
		#{Entity}Page pagination = manager.getPage(curpage, pagesize);
		model.addAttribute("list", pagination.getList());
		model.addAttribute("page", pagination);
		model.addAttribute("curpage", curpage);
		model.addAttribute("pagesize", pagesize);
		return "#{config_entity}/list";
	}

	@RequestMapping("/#{config_entity}/view_add")
	public String add(ModelMap model) {
		return "#{config_entity}/add";
	}

	@RequestMapping("/#{config_entity}/view_edit")
	public String edit(#{idtype} id, Integer pageNo, HttpServletRequest request, ModelMap model) {
		model.addAttribute("teacher", manager.findById(id));
		model.addAttribute("pageNo", pageNo);
		return "#{config_entity}/edit";
	}

	@RequestMapping("/#{config_entity}/model_save")
	public String save(#{Entity} bean, HttpServletRequest request, ModelMap model) {
		bean = manager.save(bean);
		log.info("save Teacher id={}", bean.getId());
		return "redirect:view_list.htm";
	}

	@RequestMapping("/#{config_entity}/model_update")
	public String update(@RequestParam(value = "curpage", required = true, defaultValue = "1") int curpage,
			@RequestParam(value = "pagesize", required = true, defaultValue = "20") int pagesize, #{Entity} bean,
			HttpServletRequest request, ModelMap model) {
		bean = manager.update(bean);
		log.info("update Teacher id={}.", bean.getId());
		return list(curpage, pagesize, request, model);
	}

	@RequestMapping("/#{config_entity}/model_delete")
	public String delete(@RequestParam(value = "curpage", required = true, defaultValue = "1") int curpage,
			@RequestParam(value = "pagesize", required = true, defaultValue = "20") int pagesize, #{idtype}[] ids,
			 HttpServletRequest request, ModelMap model) {
		return list(curpage,pagesize, request, model);
	}

	@Autowired
	private #{Entity}Service manager;
}